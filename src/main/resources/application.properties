server.port = 9093

# JSP View path
# spring.mvc.view.prefix=/WEB-INF/views/
# spring.mvc.view.suffix=.jsp

# Thymeleaf template path
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.cache=false
spring.thymeleaf.enabled=true
spring.thymeleaf.check-template-location=true

# DEVTOOLS (DevToolsProperties)
spring.devtools.livereload.enabled=true
spring.web.resources.static-locations=classpath:/static/,classpath:/static/notice/

# MariaDB, MySQL
# spring.datasource.hikari.driver-class-name=com.mysql.cj.jdbc.Driver
# spring.datasource.hikari.url: jdbc:mysql://localhost:3306/resort?useUnicode=true&characterEncoding=utf-8&serverTimezone=UTC
# spring.datasource.hikari.username=root
# spring.datasource.hikari.password=1234

# Local Oracle
# spring.datasource.hikari.driver-class-name=oracle.jdbc.driver.OracleDriver
# spring.datasource.hikari.jdbc-url=jdbc:oracle:thin:@localhost:1521:XE
# spring.datasource.hikari.username=kd
# spring.datasource.hikari.password=1234

# AWS EC2 Docker Oracle
spring.datasource.hikari.driver-class-name=oracle.jdbc.driver.OracleDriver
spring.datasource.hikari.jdbc-url=jdbc:oracle:thin:@121.78.128.12:1521:XE 
spring.datasource.hikari.username=team1
spring.datasource.hikari.password=69017000

# All DBMS
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=5000

spring.servlet.multipart.maxFileSize=10MB
spring.servlet.multipart.maxRequestSize=10MB

# MySQL JPA setting
# implementation 'mysql:mysql-connector-java'
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.url=jdbc:mysql://localhost:3306/javadb?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul 
#spring.datasource.username=javauser
#spring.datasource.password=1234
#
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.generate-ddl=true
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true
#spring.jpa.database-platform=org.hibernate.dialect.MySQL5Dialect
server.servlet.session.tracking-modes=cookie
spring.devtools.livereload.enabled=true


spring.security.oauth2.client.registration.google.client-id=462038687-ek5q10ljcqauqckgo391c5ilc946vb4s.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=email,profile
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.google.client-name=Google
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://openidconnect.googleapis.com/v1/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=email

# Kakao OAuth2 설정
spring.security.oauth2.client.registration.kakao.client-id=de59ec7b53c6302856c0074656ebc3b9
spring.security.oauth2.client.registration.kakao.client-secret=  # ← 비워두거나 생략 가능 (공식적으로는 필요 없음)
spring.security.oauth2.client.registration.kakao.client-name=Kakao
spring.security.oauth2.client.registration.kakao.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.scope=profile_nickname,account_email
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post

# Kakao 제공자(provider) 설정
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id

# Naver OAuth2 설정
spring.security.oauth2.client.registration.naver.client-id=Nw1t7acgdM6lWAH4ISBg
spring.security.oauth2.client.registration.naver.client-secret=LnkInlt6kp
spring.security.oauth2.client.registration.naver.client-name=Naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.naver.scope=name,email
spring.security.oauth2.client.registration.naver.client-authentication-method=client_secret_post

spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response